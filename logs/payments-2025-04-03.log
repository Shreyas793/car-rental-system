2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(4)-127.0.0.1: accepted socket from [127.0.0.1:52994]
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(4)-127.0.0.1: (port 52921) op = 80
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(4)-127.0.0.1: (port 52921) op = 84
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: accepted socket from [127.0.0.1:52995]
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 52923) op = 80
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 52923) op = 80
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "[Ljava.rmi.server.ObjID;", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@7ae39fa
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.server.ObjID", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@7ae39fa
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.server.UID", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@7ae39fa
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.dgc.Lease", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@7ae39fa
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.dgc.VMID", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@7ae39fa
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "[B", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@7ae39fa
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 52923) op = 84
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 52923) op = 80
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 52923) op = 80
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:38:51 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.MarshalledObject", codebase = ""
2025-04-03 21:38:51 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  2 unwrapping params with MBean extended ClassLoader.
2025-04-03 21:38:51 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  2, name=org.springframework.boot:type=Admin,name=SpringApplication, operationName=shutdown, signature=null
2025-04-03 21:38:51 [PAYMENT] INFO  - Application shutdown requested.
2025-04-03 21:38:51 [PAYMENT] INFO  - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-03 21:38:51 [PAYMENT] INFO  - Pausing ProtocolHandler ["http-nio-8080"]
2025-04-03 21:38:51 [PAYMENT] INFO  - Graceful shutdown complete
2025-04-03 21:38:51 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STOPPING_PREP]
2025-04-03 21:38:51 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STOPPING]
2025-04-03 21:38:51 [PAYMENT] INFO  - Stopping ProtocolHandler ["http-nio-8080"]
2025-04-03 21:38:51 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STOPPED]
2025-04-03 21:38:51 [PAYMENT] INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 21:38:51 [PAYMENT] DEBUG - HHH000031: Closing
2025-04-03 21:38:51 [PAYMENT] DEBUG - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@694b3d35] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@67d55a46]
2025-04-03 21:38:51 [PAYMENT] DEBUG - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-04-03 21:38:51 [PAYMENT] DEBUG - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-04-03 21:38:51 [PAYMENT] INFO  - HikariPool-1 - Shutdown initiated...
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@32513dea: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@431b99ad: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2269396: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@336ed022: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@62096cd9: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6647f279: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7277cbe4: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6dba3b1b: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2caabc95: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1a57a6d4: (connection evicted)
2025-04-03 21:38:51 [PAYMENT] DEBUG - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-04-03 21:38:51 [PAYMENT] INFO  - HikariPool-1 - Shutdown completed.
2025-04-03 21:39:02 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:02 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:02 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:02 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:02 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:02 [PAYMENT] INFO  - Starting CarRentalSystemApplication using Java 23.0.2 with PID 31980 (C:\Users\shrey\eclipse-workspace\CarRentalSystem\target\classes started by shrey in C:\Users\shrey\eclipse-workspace\CarRentalSystem)
2025-04-03 21:39:02 [PAYMENT] DEBUG - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-03 21:39:02 [PAYMENT] INFO  - No active profile set, falling back to 1 default profile: "default"
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:03 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:03 [PAYMENT] INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-03 21:39:03 [PAYMENT] INFO  - Finished Spring Data repository scanning in 77 ms. Found 5 JPA repository interfaces.
2025-04-03 21:39:03 [PAYMENT] DEBUG - The Apache Tomcat Native library could not be found using names [tcnative-2, libtcnative-2, tcnative-1, libtcnative-1] on the java.library.path [C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;.]. The errors reported were [Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\tcnative-2.dll, Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\libtcnative-2.dll, Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\tcnative-1.dll, Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\libtcnative-1.dll, no tcnative-2 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;., no libtcnative-2 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;., no tcnative-1 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;., no libtcnative-1 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;.]
org.apache.tomcat.jni.LibraryNotFoundError: Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\tcnative-2.dll, Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\libtcnative-2.dll, Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\tcnative-1.dll, Can't load library: C:\Users\shrey\eclipse-workspace\CarRentalSystem\bin\libtcnative-1.dll, no tcnative-2 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;., no libtcnative-2 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;., no tcnative-1 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;., no libtcnative-1 in java.library.path: C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;.
	at org.apache.tomcat.jni.Library.<init>(Library.java:91)
	at org.apache.tomcat.jni.Library.initialize(Library.java:147)
	at org.apache.catalina.core.AprLifecycleListener.init(AprLifecycleListener.java:211)
	at org.apache.catalina.core.AprLifecycleListener.isAprAvailable(AprLifecycleListener.java:113)
	at org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.isAprAvailable(TomcatServletWebServerFactoryCustomizer.java:90)
	at org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.getUseApr(TomcatServletWebServerFactoryCustomizer.java:81)
	at org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.customize(TomcatServletWebServerFactoryCustomizer.java:63)
	at org.springframework.boot.autoconfigure.web.servlet.TomcatServletWebServerFactoryCustomizer.customize(TomcatServletWebServerFactoryCustomizer.java:38)
	at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.lambda$postProcessBeforeInitialization$0(WebServerFactoryCustomizerBeanPostProcessor.java:72)
	at org.springframework.boot.util.LambdaSafe$Callbacks.lambda$invoke$0(LambdaSafe.java:287)
	at org.springframework.boot.util.LambdaSafe$LambdaSafeCallback.invoke(LambdaSafe.java:159)
	at org.springframework.boot.util.LambdaSafe$Callbacks.lambda$invoke$1(LambdaSafe.java:286)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at java.base/java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1117)
	at org.springframework.boot.util.LambdaSafe$Callbacks.invoke(LambdaSafe.java:286)
	at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.postProcessBeforeInitialization(WebServerFactoryCustomizerBeanPostProcessor.java:72)
	at org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor.postProcessBeforeInitialization(WebServerFactoryCustomizerBeanPostProcessor.java:58)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getWebServerFactory(ServletWebServerApplicationContext.java:228)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:191)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:621)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:03 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:03 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:04 [PAYMENT] DEBUG - Add container child [StandardHost[localhost]] to container [StandardEngine[Tomcat]]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Add container child [TomcatEmbeddedContext[]] to container [StandardEngine[Tomcat].StandardHost[localhost]]
2025-04-03 21:39:04 [PAYMENT] INFO  - Tomcat initialized with port 8080 (http)
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardServer[-1]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@f238e4f] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@f238e4f] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardService[Tomcat]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.mapper.MapperListener@4e245739] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.mapper.MapperListener@4e245739] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] INFO  - Initializing ProtocolHandler ["http-nio-8080"]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardService[Tomcat]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardServer[-1]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardServer[-1]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardServer[-1]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@f238e4f] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@f238e4f] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@f238e4f] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardService[Tomcat]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] INFO  - Starting service [Tomcat]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardService[Tomcat]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] INFO  - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [SimpleRealm[StandardEngine[Tomcat]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.StandardRoot@79a13920] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.StandardRoot@79a13920] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.StandardRoot@79a13920] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.DirResourceSet@778a1250] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.DirResourceSet@778a1250] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.DirResourceSet@778a1250] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.DirResourceSet@778a1250] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.DirResourceSet@778a1250] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.StandardRoot@79a13920] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.webresources.StandardRoot@79a13920] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Starting this Loader
2025-04-03 21:39:04 [PAYMENT] DEBUG - Increased cache size by [531] for item [org.apache.catalina.webresources.CachedResource@385dfb63] at [/WEB-INF/classes] making total cache size [531]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [WebappLoader[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [NonLoginAuthenticator[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardContextValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - No manager found. Checking if cluster manager should be used. Cluster configured: [false], Application distributable: [false]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Configured a manager of class [org.apache.catalina.session.StandardManager]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@2a4f8009] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@2a4f8009] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@2a4f8009] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@2a4f8009] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.deploy.NamingResourcesImpl@2a4f8009] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] INFO  - Initializing Spring embedded WebApplicationContext
2025-04-03 21:39:04 [PAYMENT] INFO  - Root WebApplicationContext: initialization completed in 1201 ms
2025-04-03 21:39:04 [PAYMENT] DEBUG - Add container child [StandardWrapper[dispatcherServlet]] to container [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardWrapperValve[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[].StandardWrapper[dispatcherServlet]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@46320c9a] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@46320c9a] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@46320c9a] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@46320c9a] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.springframework.boot.web.embedded.tomcat.LazySessionIdGenerator@46320c9a] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardManager[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [ErrorReportValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardHostValve[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat].StandardHost[localhost]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat].StandardHost[localhost]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [INITIALIZING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [INITIALIZED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngineValve[StandardEngine[Tomcat]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardPipeline[StandardEngine[Tomcat]]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat]] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardEngine[Tomcat]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.mapper.MapperListener@4e245739] to [STARTING_PREP]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.mapper.MapperListener@4e245739] to [STARTING]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registered host [localhost]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Register Wrapper [dispatcherServlet] in Context [] for service [StandardService[Tomcat]]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Register Context [] for service [StandardService[Tomcat]]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Register host [localhost] at domain [null] for service [StandardService[Tomcat]]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [org.apache.catalina.mapper.MapperListener@4e245739] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardService[Tomcat]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Setting state for [StandardServer[-1]] to [STARTED]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5a07e868
2025-04-03 21:39:04 [PAYMENT] DEBUG - Logging Provider: org.jboss.logging.Slf4jLoggerProvider found via system property
2025-04-03 21:39:04 [PAYMENT] DEBUG - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@5a07e868
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/shrey/eclipse-workspace/CarRentalSystem/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.carrental.entity.Billing
		com.carrental.entity.Car
		com.carrental.entity.CarRental
		com.carrental.entity.Reservation
		com.carrental.entity.User]
	Mapping files names []
	Properties []
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-04-03 21:39:04 [PAYMENT] INFO  - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-03 21:39:04 [PAYMENT] DEBUG - HHH000206: 'hibernate.properties' not found
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-04-03 21:39:04 [PAYMENT] INFO  - HHH000026: Second-level cache disabled
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ae280da
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ae280da
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4ae280da
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@76d0ecd7
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@76d0ecd7
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@57c69937
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@57c69937
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1ad1c363
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1ad1c363
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration byte -> org.hibernate.type.BasicTypeReference@446b64b3
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration byte -> org.hibernate.type.BasicTypeReference@446b64b3
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@446b64b3
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration binary -> org.hibernate.type.BasicTypeReference@35ac9ebd
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@35ac9ebd
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration [B -> org.hibernate.type.BasicTypeReference@35ac9ebd
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@56c0a61e
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@56c0a61e
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration image -> org.hibernate.type.BasicTypeReference@421ead7e
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5dcf0772
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5dcf0772
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@c472300
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5f6494c0
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration short -> org.hibernate.type.BasicTypeReference@6826b70f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration short -> org.hibernate.type.BasicTypeReference@6826b70f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6826b70f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4df7d9ee
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration int -> org.hibernate.type.BasicTypeReference@4df7d9ee
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4df7d9ee
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration long -> org.hibernate.type.BasicTypeReference@781dac73
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration long -> org.hibernate.type.BasicTypeReference@781dac73
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@781dac73
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a4e524
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a4e524
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3a4e524
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration double -> org.hibernate.type.BasicTypeReference@5e67a490
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration double -> org.hibernate.type.BasicTypeReference@5e67a490
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5e67a490
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2dac2e1b
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2dac2e1b
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@38c761e9
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@38c761e9
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration character -> org.hibernate.type.BasicTypeReference@1cee2e10
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration char -> org.hibernate.type.BasicTypeReference@1cee2e10
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1cee2e10
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7f4e5a39
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration string -> org.hibernate.type.BasicTypeReference@33de7f3d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@33de7f3d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@30159886
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5d66ae3a
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5d66ae3a
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5d66ae3a
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@50f4b83d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration text -> org.hibernate.type.BasicTypeReference@10131289
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c5e69a5
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration clob -> org.hibernate.type.BasicTypeReference@64a1116a
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64a1116a
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11e17893
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11e17893
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@19eea77c
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6682e6a5
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@ac4915e
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@10fb4575
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7cc2c551
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@d84b3a2
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@23648d2d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@23648d2d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@69feb4d9
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@69feb4d9
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@37c1cfa
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@37c1cfa
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2bcda694
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2bcda694
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2cc75b25
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2cc75b25
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@30036a18
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@537b3b2e
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1544ded3
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1544ded3
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3ccb12d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@28b458e6
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@221ca495
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@119d4443
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@119d4443
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@773eca84
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7d47dfed
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration date -> org.hibernate.type.BasicTypeReference@3a38e4dc
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3a38e4dc
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration time -> org.hibernate.type.BasicTypeReference@41fc0084
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@41fc0084
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@401788d5
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@401788d5
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@401788d5
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3ec9f8d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3ec9f8d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3ec9f8d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7e0f9528
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5f56424d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration instant -> org.hibernate.type.BasicTypeReference@237b2852
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@237b2852
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@448cdb47
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@448cdb47
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@448cdb47
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4628a02b
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2b01c689
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration class -> org.hibernate.type.BasicTypeReference@51424203
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@51424203
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7336fd8f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7336fd8f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7336fd8f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration locale -> org.hibernate.type.BasicTypeReference@550c973e
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@550c973e
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@161d95c6
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@161d95c6
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5203c80f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5203c80f
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@439f2d87
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@439f2d87
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration url -> org.hibernate.type.BasicTypeReference@721bf7ad
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@721bf7ad
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration vector -> org.hibernate.type.BasicTypeReference@852ef8d
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration float_vector -> org.hibernate.type.BasicTypeReference@44dd0d38
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration double_vector -> org.hibernate.type.BasicTypeReference@7e94e331
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration byte_vector -> org.hibernate.type.BasicTypeReference@539fc5d1
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4cae66a8
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration object -> org.hibernate.type.JavaObjectType@1e191150
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1e191150
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration null -> org.hibernate.type.NullType@7f51f588
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6fb22ae3
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6bd92538
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@69a373fd
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@19ae36f4
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6735f210
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4567fb2b
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@372954e1
2025-04-03 21:39:04 [PAYMENT] DEBUG - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5fd8dd66
2025-04-03 21:39:04 [PAYMENT] DEBUG - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e45a357] into BootstrapContext; was [null]
2025-04-03 21:39:04 [PAYMENT] DEBUG - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e45a357) [was null]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6c995c5d] into BootstrapContext; was [null]
2025-04-03 21:39:04 [PAYMENT] DEBUG - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@203b953c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@730bea0]
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:04 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:04 [PAYMENT] DEBUG - Pushing class transformers for PU named 'default' on loading classloader jdk.internal.loader.ClassLoaders$AppClassLoader@5a07e868
2025-04-03 21:39:04 [PAYMENT] INFO  - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-03 21:39:04 [PAYMENT] DEBUG - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e45a357]
2025-04-03 21:39:04 [PAYMENT] DEBUG - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2e45a357]
2025-04-03 21:39:04 [PAYMENT] DEBUG - HikariPool-1 - configuration:
2025-04-03 21:39:04 [PAYMENT] DEBUG - allowPoolSuspension.............false
2025-04-03 21:39:04 [PAYMENT] DEBUG - autoCommit......................true
2025-04-03 21:39:04 [PAYMENT] DEBUG - catalog.........................none
2025-04-03 21:39:04 [PAYMENT] DEBUG - connectionInitSql...............none
2025-04-03 21:39:04 [PAYMENT] DEBUG - connectionTestQuery.............none
2025-04-03 21:39:04 [PAYMENT] DEBUG - connectionTimeout...............30000
2025-04-03 21:39:04 [PAYMENT] DEBUG - dataSource......................none
2025-04-03 21:39:04 [PAYMENT] DEBUG - dataSourceClassName.............none
2025-04-03 21:39:04 [PAYMENT] DEBUG - dataSourceJNDI..................none
2025-04-03 21:39:04 [PAYMENT] DEBUG - dataSourceProperties............{password=<masked>}
2025-04-03 21:39:04 [PAYMENT] DEBUG - driverClassName................."com.mysql.cj.jdbc.Driver"
2025-04-03 21:39:04 [PAYMENT] DEBUG - exceptionOverrideClassName......none
2025-04-03 21:39:04 [PAYMENT] DEBUG - healthCheckProperties...........{}
2025-04-03 21:39:04 [PAYMENT] DEBUG - healthCheckRegistry.............none
2025-04-03 21:39:04 [PAYMENT] DEBUG - idleTimeout.....................600000
2025-04-03 21:39:04 [PAYMENT] DEBUG - initializationFailTimeout.......1
2025-04-03 21:39:04 [PAYMENT] DEBUG - isolateInternalQueries..........false
2025-04-03 21:39:04 [PAYMENT] DEBUG - jdbcUrl.........................jdbc:mysql://localhost:3306/carrental
2025-04-03 21:39:04 [PAYMENT] DEBUG - keepaliveTime...................0
2025-04-03 21:39:04 [PAYMENT] DEBUG - leakDetectionThreshold..........0
2025-04-03 21:39:04 [PAYMENT] DEBUG - maxLifetime.....................1800000
2025-04-03 21:39:04 [PAYMENT] DEBUG - maximumPoolSize.................10
2025-04-03 21:39:04 [PAYMENT] DEBUG - metricRegistry..................none
2025-04-03 21:39:04 [PAYMENT] DEBUG - metricsTrackerFactory...........none
2025-04-03 21:39:04 [PAYMENT] DEBUG - minimumIdle.....................10
2025-04-03 21:39:04 [PAYMENT] DEBUG - password........................<masked>
2025-04-03 21:39:04 [PAYMENT] DEBUG - poolName........................"HikariPool-1"
2025-04-03 21:39:04 [PAYMENT] DEBUG - readOnly........................false
2025-04-03 21:39:04 [PAYMENT] DEBUG - registerMbeans..................false
2025-04-03 21:39:04 [PAYMENT] DEBUG - scheduledExecutor...............none
2025-04-03 21:39:04 [PAYMENT] DEBUG - schema..........................none
2025-04-03 21:39:04 [PAYMENT] DEBUG - threadFactory...................internal
2025-04-03 21:39:04 [PAYMENT] DEBUG - transactionIsolation............default
2025-04-03 21:39:04 [PAYMENT] DEBUG - username........................"root"
2025-04-03 21:39:04 [PAYMENT] DEBUG - validationTimeout...............5000
2025-04-03 21:39:04 [PAYMENT] INFO  - HikariPool-1 - Starting...
2025-04-03 21:39:04 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:04 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:04 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:04 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:04 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] INFO  - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7f77e065
2025-04-03 21:39:05 [PAYMENT] INFO  - HikariPool-1 - Start completed.
2025-04-03 21:39:05 [PAYMENT] DEBUG - Database ->
	   name : MySQL
	version : 8.0.35
	  major : 8
	  minor : 0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-9.1.0 (Revision: cf2917ea44ae2e43a4514a33771035aa99de73bf)
	  major : 9
	  minor : 1
2025-04-03 21:39:05 [PAYMENT] DEBUG - JDBC version : 4.2
2025-04-03 21:39:05 [PAYMENT] WARN  - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2025-04-03 21:39:05 [PAYMENT] WARN  - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-04-03 21:39:05 [PAYMENT] DEBUG - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-04-03 21:39:05 [PAYMENT] DEBUG - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-04-03 21:39:05 [PAYMENT] INFO  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3275a47f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b5af65b)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e0163cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b289535)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74619273) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38c55a8a)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d7f7962) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@32d1d6c5)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4a5b38e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58583a2d)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e8afc2d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d172c7)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@115ef673) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8ce3f27)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@614cd187) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6802d023)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@e895e3e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77476fcf)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration null -> org.hibernate.type.NullType@8d5da7e
2025-04-03 21:39:05 [PAYMENT] DEBUG - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7f51f588`
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1ff81b0d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c610f]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding entity from annotated class: com.carrental.entity.Billing
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@769893da
2025-04-03 21:39:05 [PAYMENT] DEBUG - Import with entity name Billing
2025-04-03 21:39:05 [PAYMENT] DEBUG - Bind entity com.carrental.entity.Billing on table billing
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=2, active=0, idle=2, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.Billing] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.Billing
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property id with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Billing:id]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: billing.id
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property id
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37a599e1
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property paymentDate with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Billing:paymentDate]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for paymentDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: billing.payment_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property paymentDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property paymentStatus with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Billing:paymentStatus]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for paymentStatus
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: billing.payment_status
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property paymentStatus
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedJoinColumn(column='reservation_id')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property reservation
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property totalAmount with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Billing:totalAmount]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for totalAmount
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: billing.total_amount
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property totalAmount
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property transactionId with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Billing:transactionId]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for transactionId
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: billing.transaction_id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property transactionId
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000194: Package not found or no package-info.java: com.carrental.entity
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding entity from annotated class: com.carrental.entity.Car
2025-04-03 21:39:05 [PAYMENT] DEBUG - Import with entity name Car
2025-04-03 21:39:05 [PAYMENT] DEBUG - Bind entity com.carrental.entity.Car on table cars
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.Car] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.Car
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property id with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Car:id]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: cars.id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property id
2025-04-03 21:39:05 [PAYMENT] DEBUG - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property available with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Car:available]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for available
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: cars.available
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property available
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property make with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Car:make]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for make
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: cars.make
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property make
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property model with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Car:model]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for model
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: cars.model
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property model
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property rentalPrice with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Car:rentalPrice]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for rentalPrice
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: cars.rental_price
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property rentalPrice
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property year with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Car:year]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for year
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: cars.year
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property year
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000194: Package not found or no package-info.java: com.carrental.entity
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding entity from annotated class: com.carrental.entity.CarRental
2025-04-03 21:39:05 [PAYMENT] DEBUG - Import with entity name CarRental
2025-04-03 21:39:05 [PAYMENT] DEBUG - Bind entity com.carrental.entity.CarRental on table rentals
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.CarRental] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.CarRental
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property id with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.CarRental:id]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: rentals.id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property id
2025-04-03 21:39:05 [PAYMENT] DEBUG - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedJoinColumn(column='billing_id')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property billing
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn(column='car_id')
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property carId with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.CarRental:carId]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for carId
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: rentals.car_id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property carId
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn(column='rental_end_time')
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property rentalEndTime with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.CarRental:rentalEndTime]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for rentalEndTime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: rentals.rental_end_time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property rentalEndTime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn(column='rental_start_time')
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property rentalStartTime with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.CarRental:rentalStartTime]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for rentalStartTime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: rentals.rental_start_time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property rentalStartTime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn(column='status')
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property status with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.CarRental:status]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for status
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: rentals.status
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property status
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn(column='user_id')
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property userId with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.CarRental:userId]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for userId
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: rentals.user_id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property userId
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000194: Package not found or no package-info.java: com.carrental.entity
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding entity from annotated class: com.carrental.entity.Reservation
2025-04-03 21:39:05 [PAYMENT] DEBUG - Import with entity name Reservation
2025-04-03 21:39:05 [PAYMENT] DEBUG - Bind entity com.carrental.entity.Reservation on table reservations
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.Reservation] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.Reservation
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property id with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Reservation:id]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: reservations.id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property id
2025-04-03 21:39:05 [PAYMENT] DEBUG - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedJoinColumn(column='car_id')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property car
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property endDate with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Reservation:endDate]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for endDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: reservations.end_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property endDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property startDate with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Reservation:startDate]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for startDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: reservations.start_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property startDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property totalCost with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.Reservation:totalCost]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for totalCost
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: reservations.total_cost
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property totalCost
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedJoinColumn(column='user_id')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property user
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000194: Package not found or no package-info.java: com.carrental.entity
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding entity from annotated class: com.carrental.entity.User
2025-04-03 21:39:05 [PAYMENT] DEBUG - Import with entity name User
2025-04-03 21:39:05 [PAYMENT] DEBUG - Bind entity com.carrental.entity.User on table users
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.User] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.User
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property id with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.User:id]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: users.id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property id
2025-04-03 21:39:05 [PAYMENT] DEBUG - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property password with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.User:password]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for password
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: users.password
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property password
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property role with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.User:role]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for role
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: users.role
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property role
2025-04-03 21:39:05 [PAYMENT] DEBUG - Binding column: AnnotatedColumn()
2025-04-03 21:39:05 [PAYMENT] DEBUG - MetadataSourceProcessor property username with lazy=false
2025-04-03 21:39:05 [PAYMENT] DEBUG - Attempting to locate auto-apply AttributeConverter for property [com.carrental.entity.User:username]
2025-04-03 21:39:05 [PAYMENT] DEBUG - building BasicValue for username
2025-04-03 21:39:05 [PAYMENT] DEBUG - Skipping column re-registration: users.username
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building property username
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000194: Package not found or no package-info.java: com.carrental.entity
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for paymentDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for paymentStatus
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for totalAmount
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for transactionId
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for available
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for make
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for model
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for rentalPrice
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for year
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for carId
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for rentalEndTime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for rentalStartTime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for status
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for userId
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for endDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for startDate
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for totalCost
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for id
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for password
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for role
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting `BasicValueBinder#fillSimpleValue` for username
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=3, active=0, idle=3, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Forcing column [id] to be non-null as it is part of the primary key for table [billing]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Forcing column [id] to be non-null as it is part of the primary key for table [cars]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Forcing column [id] to be non-null as it is part of the primary key for table [rentals]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Forcing column [id] to be non-null as it is part of the primary key for table [reservations]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6d86cda
2025-04-03 21:39:05 [PAYMENT] DEBUG - Building session factory
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=4, active=0, idle=4, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@578a66ae
2025-04-03 21:39:05 [PAYMENT] DEBUG - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-03 21:39:05 [PAYMENT] DEBUG - Instantiating SessionFactory with settings: {java.specification.version=23, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@87f6ab5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=C:\Users\shrey\eclipse-workspace\CarRentalSystem\target\classes;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.4\spring-boot-starter-data-jpa-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.4\spring-boot-starter-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot\3.4.4\spring-boot-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.4\spring-boot-autoconfigure-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.4\spring-boot-starter-logging-3.4.4.jar;C:\Users\shrey\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\shrey\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\shrey\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\shrey\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.4\spring-boot-starter-jdbc-3.4.4.jar;C:\Users\shrey\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-jdbc\6.2.5\spring-jdbc-6.2.5.jar;C:\Users\shrey\.m2\repository\org\hibernate\orm\hibernate-core\6.6.11.Final\hibernate-core-6.6.11.Final.jar;C:\Users\shrey\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\shrey\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\shrey\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\shrey\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\shrey\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\shrey\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\shrey\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\shrey\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\shrey\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\shrey\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\shrey\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\shrey\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\shrey\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\shrey\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\shrey\.m2\repository\org\springframework\data\spring-data-jpa\3.4.4\spring-data-jpa-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\data\spring-data-commons\3.4.4\spring-data-commons-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-orm\6.2.5\spring-orm-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-context\6.2.5\spring-context-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-tx\6.2.5\spring-tx-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-beans\6.2.5\spring-beans-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-aspects\6.2.5\spring-aspects-6.2.5.jar;C:\Users\shrey\.m2\repository\org\aspectj\aspectjweaver\1.9.23\aspectjweaver-1.9.23.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.4.4\spring-boot-starter-security-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-aop\6.2.5\spring-aop-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\security\spring-security-config\6.4.4\spring-security-config-6.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\security\spring-security-web\6.4.4\spring-security-web-6.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-expression\6.2.5\spring-expression-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.4\spring-boot-starter-web-3.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.4\spring-boot-starter-json-3.4.4.jar;C:\Users\shrey\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\shrey\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\shrey\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\shrey\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\shrey\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\shrey\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\shrey\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.4.4\spring-boot-starter-tomcat-3.4.4.jar;C:\Users\shrey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.39\tomcat-embed-core-10.1.39.jar;C:\Users\shrey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.39\tomcat-embed-el-10.1.39.jar;C:\Users\shrey\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.39\tomcat-embed-websocket-10.1.39.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-web\6.2.5\spring-web-6.2.5.jar;C:\Users\shrey\.m2\repository\io\micrometer\micrometer-observation\1.14.5\micrometer-observation-1.14.5.jar;C:\Users\shrey\.m2\repository\io\micrometer\micrometer-commons\1.14.5\micrometer-commons-1.14.5.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-webmvc\6.2.5\spring-webmvc-6.2.5.jar;C:\Users\shrey\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\shrey\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\shrey\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-core\6.2.5\spring-core-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\spring-jcl\6.2.5\spring-jcl-6.2.5.jar;C:\Users\shrey\.m2\repository\org\springframework\security\spring-security-core\6.4.4\spring-security-core-6.4.4.jar;C:\Users\shrey\.m2\repository\org\springframework\security\spring-security-crypto\6.4.4\spring-security-crypto-6.4.4.jar;C:\Users\shrey\.m2\repository\org\apache\poi\poi-ooxml\5.2.3\poi-ooxml-5.2.3.jar;C:\Users\shrey\.m2\repository\org\apache\poi\poi\5.2.3\poi-5.2.3.jar;C:\Users\shrey\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\shrey\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\shrey\.m2\repository\com\zaxxer\SparseBitSet\1.2\SparseBitSet-1.2.jar;C:\Users\shrey\.m2\repository\org\apache\poi\poi-ooxml-lite\5.2.3\poi-ooxml-lite-5.2.3.jar;C:\Users\shrey\.m2\repository\org\apache\xmlbeans\xmlbeans\5.1.1\xmlbeans-5.1.1.jar;C:\Users\shrey\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\shrey\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\shrey\.m2\repository\com\github\virtuald\curvesapi\1.07\curvesapi-1.07.jar;C:\Users\shrey\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\shrey\.m2\repository\org\apache\commons\commons-collections4\4.4\commons-collections4-4.4.jar;C:\Users\shrey\.m2\repository\com\lowagie\itext\2.1.7\itext-2.1.7.jar;C:\Users\shrey\.m2\repository\bouncycastle\bcmail-jdk14\138\bcmail-jdk14-138.jar;C:\Users\shrey\.m2\repository\bouncycastle\bcprov-jdk14\138\bcprov-jdk14-138.jar;C:\Users\shrey\.m2\repository\org\bouncycastle\bctsp-jdk14\1.38\bctsp-jdk14-1.38.jar;C:\Users\shrey\.m2\repository\org\bouncycastle\bcprov-jdk14\1.38\bcprov-jdk14-1.38.jar;C:\Users\shrey\.m2\repository\org\bouncycastle\bcmail-jdk14\1.38\bcmail-jdk14-1.38.jar;C:\Users\shrey\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\shrey\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\shrey\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar, java.vm.vendor=Eclipse Adoptium, LOG_PATH=logs, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, catalina.useNaming=false, user.timezone=Asia/Calcutta, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=23, os.name=Windows 11, APPLICATION_NAME=CarRentalSystem, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=IN, sun.boot.library.path=C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.carrental.CarRentalSystemApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5c316230, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=CarRentalSystem, user.home=C:\Users\shrey, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre, file.separator=\, spring.output.ansi.enabled=always, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=23.0.2+7, user.name=shrey, spring.jmx.enabled=true, stdout.encoding=UTF-8, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-23.0.2+7, LOG_FILE=logs\spring.log, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\shrey\AppData\Local\Temp\, catalina.home=C:\Users\shrey\AppData\Local\Temp\tomcat.8080.10115356567983562947, com.sun.management.jmxremote.port=53001, java.version=23.0.2, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\shrey\eclipse-workspace\CarRentalSystem, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=31980, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\shrey\AppData\Local\Temp\tomcat.8080.10115356567983562947, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@41581c3f, native.encoding=Cp1252, java.library.path=C:\Users\shrey\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin/server;C:/Users/shrey/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_23.0.2.v20250131-0604/jre/bin;C:\Program Files\Python38\Scripts\;C:\Program Files\Python38\;C:\Program Files\Python312\Scripts\;C:\Program Files\Python312\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\shrey\AppData\Local\Microsoft\WindowsApps;C:\Users\shrey\AppData\Local\Programs\Microsoft VS Code\bin;C:\msys64\mingw64\bin;C:\Users\shrey\AppData\Roaming\npm;C:\Users\shrey\OneDrive\Desktop;;., stderr.encoding=UTF-8, java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, emulated-client, sharing, java.vm.version=23.0.2+7, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), CONSOLE_LOG_PATTERN=%d{yyyy-MM-dd HH:mm:ss} - [%level] - %msg%n, java.class.version=67.0, LOGGED_APPLICATION_NAME=[CarRentalSystem] }
2025-04-03 21:39:05 [PAYMENT] DEBUG - Session factory constructed with filter configurations : {}
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=5, active=0, idle=5, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e0704e2] under count; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26d445e9] under every; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6e7f29d5] under any; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f33bb6f] under sinh; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@53c4dd9d
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@446cc036] under cosh; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@33b2ba25] under tanh; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ad198c9] under pi; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@481bae3f] under log; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : length -> character_length
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6fe243a] under position; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3e89f5bc] under overlay; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@576b385d] under trim; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2fb70301] under cast; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@126f2eb8] under collate; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7d3815f7] under extract; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@64e657b0] under ifnull; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@b5390] under pad; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@397dfbe8] under str; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5535e9] under format; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5cfe28e1] under timestampadd; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@34626d4] under timestampdiff; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : dateadd -> timestampadd
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : datediff -> timestampdiff
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@362c48c] under current_date; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62aee901] under current_time; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1983a4e4] under current_timestamp; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : current date -> current_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : current time -> current_time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : current timestamp -> current_timestamp
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29b4444a] under local_date; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ce7a354] under local_time; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2914a328] under local_datetime; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d34866a] under offset_datetime; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : local date -> local_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : local time -> local_time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : local datetime -> local_datetime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : offset datetime -> offset_datetime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26291192] under instant; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : current_instant -> instant
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4c91f5bf] under sql; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@481bae3f
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@78bce1c4] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@189e96af] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : day -> dayofmonth
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45b6c666] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6fe243a
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4301fa39] under trunc; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : truncate -> trunc
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73dd0f23] under bitand; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@38d4488c] under bitor; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@579ce2e9] under bitxor; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b800a11] under bitnot; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3faa55] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5535e9
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3ce7a354
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2914a328
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ab502f6] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ad198c9
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2a8e30e3] under chr; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registering alternate key : char -> chr
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31c56721] under sysdate; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3f71ae7f] under listagg; prior registration was null
2025-04-03 21:39:05 [PAYMENT] DEBUG - abs(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double acos(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - adddate(DATE datetime, INTEGER days)
2025-04-03 21:39:05 [PAYMENT] DEBUG - addtime(TIME datetime, TIME time)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Boolean any(BOOLEAN arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer ascii(STRING arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double asin(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double atan(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double atan2(NUMERIC arg0, NUMERIC arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - avg(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - bit_and(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer bit_length(STRING_OR_CLOB arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - bit_or(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - bitand(arg0, arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - bitnot(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - bitor(arg0, arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - bitxor(arg0, arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - cast(arg as Type)
2025-04-03 21:39:05 [PAYMENT] DEBUG - ceiling(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Character char(INTEGER arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer character_length(STRING_OR_CLOB arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Character chr(INTEGER arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - coalesce(arg0[, arg1[, ...]])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String collate(STRING string as COLLATION collation)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String concat(STRING string0[, STRING string1[, ...]])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double cos(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double cosh(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double cot(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Long count([distinct ]{arg|*})
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer crc32(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Date curdate()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Date current date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Time current time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp current timestamp
2025-04-03 21:39:05 [PAYMENT] DEBUG - Date current_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Instant current_instant
2025-04-03 21:39:05 [PAYMENT] DEBUG - Time current_time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp current_timestamp
2025-04-03 21:39:05 [PAYMENT] DEBUG - Time curtime()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Date date(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer datediff(DATE end, DATE start)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer day(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String dayname(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer dayofmonth(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer dayofweek(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer dayofyear(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double degrees(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Boolean every(BOOLEAN arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double exp(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - floor(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String format(TEMPORAL datetime as STRING pattern)
2025-04-03 21:39:05 [PAYMENT] DEBUG - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer hour(TIME arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - ifnull(arg0, arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Instant instant
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Date last_day(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String left(STRING string, INTEGER length)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer length(STRING_OR_CLOB arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String listagg(STRING arg0, STRING arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double ln(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - LocalDate local date
2025-04-03 21:39:05 [PAYMENT] DEBUG - LocalDateTime local datetime
2025-04-03 21:39:05 [PAYMENT] DEBUG - LocalTime local time
2025-04-03 21:39:05 [PAYMENT] DEBUG - LocalDate local_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - LocalDateTime local_datetime
2025-04-03 21:39:05 [PAYMENT] DEBUG - LocalTime local_time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp localtime
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp localtimestamp
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer locate(STRING pattern, STRING string[, INTEGER start])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double log(NUMERIC arg0[, NUMERIC arg1])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double log10(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double log2(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String lower(STRING string)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String lpad(string, length[, padding])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String ltrim(STRING string[, STRING characters])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Date makedate(INTEGER year, INTEGER dayofyear)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2025-04-03 21:39:05 [PAYMENT] DEBUG - max(COMPARABLE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String md5(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer microsecond(TIME arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - min(COMPARABLE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer minute(TIME arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer mod(INTEGER arg0, INTEGER arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer month(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String monthname(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp now()
2025-04-03 21:39:05 [PAYMENT] DEBUG - nullif(arg0, arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer octet_length(STRING_OR_CLOB arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - OffsetDateTime offset datetime
2025-04-03 21:39:05 [PAYMENT] DEBUG - OffsetDateTime offset_datetime
2025-04-03 21:39:05 [PAYMENT] DEBUG - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double pi
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer position(STRING pattern in STRING string)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double power(NUMERIC arg0, NUMERIC arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer quarter(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double radians(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double rand([INTEGER seed])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String repeat(STRING string, INTEGER times)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String replace(STRING string, STRING pattern, STRING replacement)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String reverse(STRING arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String right(STRING string, INTEGER length)
2025-04-03 21:39:05 [PAYMENT] DEBUG - round(NUMERIC number[, INTEGER places])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String rpad(string, length[, padding])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String rtrim(STRING string[, STRING characters])
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer second(TIME arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String sha(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String sha1(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String sha2(arg0, arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer sign(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double sin(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double sinh(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String soundex(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String space(INTEGER arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Object sql
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double sqrt(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double stddev(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double stddev_pop(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double stddev_samp(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String str(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - subdate(DATE datetime, INTEGER days)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String substr(STRING string, INTEGER start[, INTEGER length])
2025-04-03 21:39:05 [PAYMENT] DEBUG - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2025-04-03 21:39:05 [PAYMENT] DEBUG - subtime(TIME datetime, TIME time)
2025-04-03 21:39:05 [PAYMENT] DEBUG - sum(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp sysdate()
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double tan(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double tanh(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String time(arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp timestamp(arg0[, arg1])
2025-04-03 21:39:05 [PAYMENT] DEBUG - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2025-04-03 21:39:05 [PAYMENT] DEBUG - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2025-04-03 21:39:05 [PAYMENT] DEBUG - trunc( ... )
2025-04-03 21:39:05 [PAYMENT] DEBUG - truncate( ... )
2025-04-03 21:39:05 [PAYMENT] DEBUG - String upper(STRING string)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Date utc_date
2025-04-03 21:39:05 [PAYMENT] DEBUG - Time utc_time
2025-04-03 21:39:05 [PAYMENT] DEBUG - Timestamp utc_timestamp
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double var_pop(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double var_samp(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Double variance(NUMERIC arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer week(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Integer year(DATE arg)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting QueryInterpretationCache(2048)
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=6, active=0, idle=6, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e33403d
2025-04-03 21:39:05 [PAYMENT] DEBUG - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-04-03 21:39:05 [PAYMENT] DEBUG - Configured EntityCopyObserver strategy: disallow
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=7, active=0, idle=7, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@17cb6f65
2025-04-03 21:39:05 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:05 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:05 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:05 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:05 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Reservation#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=8, active=0, idle=8, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Reservation#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Reservation#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Reservation#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.Reservation] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.Reservation
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1db4acdc
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=9, active=0, idle=9, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:02, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_Server_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:1188199082, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG - X509Certificate: Alg:SHA256withRSA, Serial:01, Subject:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Issuer:CN=MySQL_Server_8.0.35_Auto_Generated_CA_Certificate, Key type:RSA, Length:2048, Cert Id:3313802948, Valid from:03/11/23, 1:56 pm, Valid until:31/10/33, 1:56 pm
2025-04-03 21:39:05 [PAYMENT] DEBUG -  TLSHandshake: localhost:3306, TLSv1.3, TLS_AES_256_GCM_SHA384, 1188199082
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7b25c1
2025-04-03 21:39:05 [PAYMENT] DEBUG - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000513: Unable to create the ReflectionOptimizer for [com.carrental.entity.Reservation]: private accessor [car]
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Reservation#car` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Reservation#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.Car] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.Car
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000513: Unable to create the ReflectionOptimizer for [com.carrental.entity.Car]: private accessor [available]
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.CarRental#billing` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.CarRental#billing` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.CarRental] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.CarRental
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000513: Unable to create the ReflectionOptimizer for [com.carrental.entity.CarRental]: private accessor [billing]
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.CarRental#billing` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.User] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.User
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000513: Unable to create the ReflectionOptimizer for [com.carrental.entity.User]: private accessor [password]
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Billing#reservation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Billing#reservation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - Not known whether passed class name [com.carrental.entity.Billing] is safe
2025-04-03 21:39:05 [PAYMENT] DEBUG - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.carrental.entity.Billing
2025-04-03 21:39:05 [PAYMENT] DEBUG - HHH000513: Unable to create the ReflectionOptimizer for [com.carrental.entity.Billing]: private accessor [paymentDate]
2025-04-03 21:39:05 [PAYMENT] DEBUG - To-one property `com.carrental.entity.Billing#reservation` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting post-init callbacks
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.carrental.entity.Reservation.car]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.carrental.entity.Reservation.user]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : Entity(com.carrental.entity.Reservation) `staticFetchableList` generator
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : Entity(com.carrental.entity.Car) `staticFetchableList` generator
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.carrental.entity.CarRental.billing]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : Entity(com.carrental.entity.CarRental) `staticFetchableList` generator
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : Entity(com.carrental.entity.User) `staticFetchableList` generator
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.carrental.entity.Billing.reservation]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Starting PostInitCallbackEntry : Entity(com.carrental.entity.Billing) `staticFetchableList` generator
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : r1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [StandardTableGroup(com.carrental.entity.Reservation)] with identifierForTableGroup [com.carrental.entity.Reservation] for NavigablePath [com.carrental.entity.Reservation] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7c013560] with identifierForTableGroup [com.carrental.entity.Reservation.car] for NavigablePath [com.carrental.entity.Reservation.car] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : c1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b37d1a4] with identifierForTableGroup [com.carrental.entity.Reservation.user] for NavigablePath [com.carrental.entity.Reservation.user] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : u1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.carrental.entity.Reservation]
 |  +-EntityFetchJoinedImpl [com.carrental.entity.Reservation.car]
 |  |  +-BasicFetch [com.carrental.entity.Reservation.car.available]
 |  |  +-BasicFetch [com.carrental.entity.Reservation.car.make]
 |  |  +-BasicFetch [com.carrental.entity.Reservation.car.model]
 |  |  +-BasicFetch [com.carrental.entity.Reservation.car.rentalPrice]
 |  |  \-BasicFetch [com.carrental.entity.Reservation.car.year]
 |  +-BasicFetch [com.carrental.entity.Reservation.endDate]
 |  +-BasicFetch [com.carrental.entity.Reservation.startDate]
 |  +-BasicFetch [com.carrental.entity.Reservation.totalCost]
 |  \-EntityFetchJoinedImpl [com.carrental.entity.Reservation.user]
 |  |  +-BasicFetch [com.carrental.entity.Reservation.user.password]
 |  |  +-BasicFetch [com.carrental.entity.Reservation.user.role]
 |  |  \-BasicFetch [com.carrental.entity.Reservation.user.username]

2025-04-03 21:39:05 [PAYMENT] DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (r1 : com.carrental.entity.Reservation) {
          primaryTableReference : reservations as r1_0
          TableGroupJoins {
             join LazyTableGroup (c1 : com.carrental.entity.Reservation.car) {
              primaryTableReference : cars as c1_0
            }
             join LazyTableGroup (u1 : com.carrental.entity.Reservation.user) {
              primaryTableReference : users as u1_0
            }
          }
        }
      }
    }

2025-04-03 21:39:05 [PAYMENT] DEBUG - Static SQL for entity: com.carrental.entity.Reservation
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Version select: select id from reservations where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Insert (0): insert into reservations (car_id,end_date,start_date,total_cost,user_id) values (?,?,?,?,?)
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Update (0): update reservations set car_id=?,end_date=?,start_date=?,total_cost=?,user_id=? where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Delete (0): delete from reservations where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : c1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [StandardTableGroup(com.carrental.entity.Car)] with identifierForTableGroup [com.carrental.entity.Car] for NavigablePath [com.carrental.entity.Car] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.carrental.entity.Car]
 |  +-BasicFetch [com.carrental.entity.Car.available]
 |  +-BasicFetch [com.carrental.entity.Car.make]
 |  +-BasicFetch [com.carrental.entity.Car.model]
 |  +-BasicFetch [com.carrental.entity.Car.rentalPrice]
 |  \-BasicFetch [com.carrental.entity.Car.year]

2025-04-03 21:39:05 [PAYMENT] DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : com.carrental.entity.Car) {
          primaryTableReference : cars as c1_0
        }
      }
    }

2025-04-03 21:39:05 [PAYMENT] DEBUG - Static SQL for entity: com.carrental.entity.Car
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Version select: select id from cars where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Insert (0): insert into cars (available,make,model,rental_price,year) values (?,?,?,?,?)
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Update (0): update cars set available=?,make=?,model=?,rental_price=?,year=? where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Delete (0): delete from cars where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : cr1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [StandardTableGroup(com.carrental.entity.CarRental)] with identifierForTableGroup [com.carrental.entity.CarRental] for NavigablePath [com.carrental.entity.CarRental] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4c4be9d8] with identifierForTableGroup [com.carrental.entity.CarRental.billing] for NavigablePath [com.carrental.entity.CarRental.billing] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : b1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f251bf1] with identifierForTableGroup [com.carrental.entity.CarRental.billing.reservation] for NavigablePath [com.carrental.entity.CarRental.billing.reservation] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : r1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e23af91] with identifierForTableGroup [com.carrental.entity.CarRental.billing.reservation.car] for NavigablePath [com.carrental.entity.CarRental.billing.reservation.car] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@47393345] with identifierForTableGroup [com.carrental.entity.CarRental.billing.reservation.user] for NavigablePath [com.carrental.entity.CarRental.billing.reservation.user] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.carrental.entity.CarRental]
 |  +-EntityFetchJoinedImpl [com.carrental.entity.CarRental.billing]
 |  |  +-BasicFetch [com.carrental.entity.CarRental.billing.paymentDate]
 |  |  +-BasicFetch [com.carrental.entity.CarRental.billing.paymentStatus]
 |  |  +-EntityFetchJoinedImpl [com.carrental.entity.CarRental.billing.reservation]
 |  |  |  +-EntityFetchSelectImpl [com.carrental.entity.CarRental.billing.reservation.car]
 |  |  |  +-BasicFetch [com.carrental.entity.CarRental.billing.reservation.endDate]
 |  |  |  +-BasicFetch [com.carrental.entity.CarRental.billing.reservation.startDate]
 |  |  |  +-BasicFetch [com.carrental.entity.CarRental.billing.reservation.totalCost]
 |  |  |  \-EntityFetchSelectImpl [com.carrental.entity.CarRental.billing.reservation.user]
 |  |  +-BasicFetch [com.carrental.entity.CarRental.billing.totalAmount]
 |  |  \-BasicFetch [com.carrental.entity.CarRental.billing.transactionId]
 |  +-BasicFetch [com.carrental.entity.CarRental.carId]
 |  +-BasicFetch [com.carrental.entity.CarRental.rentalEndTime]
 |  +-BasicFetch [com.carrental.entity.CarRental.rentalStartTime]
 |  +-BasicFetch [com.carrental.entity.CarRental.status]
 |  \-BasicFetch [com.carrental.entity.CarRental.userId]

2025-04-03 21:39:05 [PAYMENT] DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (cr1 : com.carrental.entity.CarRental) {
          primaryTableReference : rentals as cr1_0
          TableGroupJoins {
             join LazyTableGroup (b1 : com.carrental.entity.CarRental.billing) {
              primaryTableReference : billing as b1_0
              TableGroupJoins {
                 join LazyTableGroup (r1 : com.carrental.entity.CarRental.billing.reservation) {
                  primaryTableReference : reservations as r1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (c1 : com.carrental.entity.CarRental.billing.reservation.car) {
                    }
                    left  join LazyTableGroup (u1 : com.carrental.entity.CarRental.billing.reservation.user) {
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2025-04-03 21:39:05 [PAYMENT] DEBUG - Static SQL for entity: com.carrental.entity.CarRental
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Version select: select id from rentals where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Insert (0): insert into rentals (billing_id,car_id,rental_end_time,rental_start_time,status,user_id) values (?,?,?,?,?,?)
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Update (0): update rentals set billing_id=?,car_id=?,rental_end_time=?,rental_start_time=?,status=?,user_id=? where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Delete (0): delete from rentals where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : u1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [StandardTableGroup(com.carrental.entity.User)] with identifierForTableGroup [com.carrental.entity.User] for NavigablePath [com.carrental.entity.User] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.carrental.entity.User]
 |  +-BasicFetch [com.carrental.entity.User.password]
 |  +-BasicFetch [com.carrental.entity.User.role]
 |  \-BasicFetch [com.carrental.entity.User.username]

2025-04-03 21:39:05 [PAYMENT] DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.carrental.entity.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2025-04-03 21:39:05 [PAYMENT] DEBUG - Static SQL for entity: com.carrental.entity.User
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Version select: select id from users where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Insert (0): insert into users (password,role,username) values (?,?,?)
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Update (0): update users set password=?,role=?,username=? where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Delete (0): delete from users where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : b1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [StandardTableGroup(com.carrental.entity.Billing)] with identifierForTableGroup [com.carrental.entity.Billing] for NavigablePath [com.carrental.entity.Billing] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bf45b7c] with identifierForTableGroup [com.carrental.entity.Billing.reservation] for NavigablePath [com.carrental.entity.Billing.reservation] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : r1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2559f65c] with identifierForTableGroup [com.carrental.entity.Billing.reservation.car] for NavigablePath [com.carrental.entity.Billing.reservation.car] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : c1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@490704a5] with identifierForTableGroup [com.carrental.entity.Billing.reservation.user] for NavigablePath [com.carrental.entity.Billing.reservation.user] 
2025-04-03 21:39:05 [PAYMENT] DEBUG - Created new SQL alias : u1_0
2025-04-03 21:39:05 [PAYMENT] DEBUG - DomainResult Graph:
 \-EntityResultImpl [com.carrental.entity.Billing]
 |  +-BasicFetch [com.carrental.entity.Billing.paymentDate]
 |  +-BasicFetch [com.carrental.entity.Billing.paymentStatus]
 |  +-EntityFetchJoinedImpl [com.carrental.entity.Billing.reservation]
 |  |  +-EntityFetchJoinedImpl [com.carrental.entity.Billing.reservation.car]
 |  |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.car.available]
 |  |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.car.make]
 |  |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.car.model]
 |  |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.car.rentalPrice]
 |  |  |  \-BasicFetch [com.carrental.entity.Billing.reservation.car.year]
 |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.endDate]
 |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.startDate]
 |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.totalCost]
 |  |  \-EntityFetchJoinedImpl [com.carrental.entity.Billing.reservation.user]
 |  |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.user.password]
 |  |  |  +-BasicFetch [com.carrental.entity.Billing.reservation.user.role]
 |  |  |  \-BasicFetch [com.carrental.entity.Billing.reservation.user.username]
 |  +-BasicFetch [com.carrental.entity.Billing.totalAmount]
 |  \-BasicFetch [com.carrental.entity.Billing.transactionId]

2025-04-03 21:39:05 [PAYMENT] DEBUG - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (b1 : com.carrental.entity.Billing) {
          primaryTableReference : billing as b1_0
          TableGroupJoins {
             join LazyTableGroup (r1 : com.carrental.entity.Billing.reservation) {
              primaryTableReference : reservations as r1_0
              TableGroupJoins {
                 join LazyTableGroup (c1 : com.carrental.entity.Billing.reservation.car) {
                  primaryTableReference : cars as c1_0
                }
                 join LazyTableGroup (u1 : com.carrental.entity.Billing.reservation.user) {
                  primaryTableReference : users as u1_0
                }
              }
            }
          }
        }
      }
    }

2025-04-03 21:39:05 [PAYMENT] DEBUG - Static SQL for entity: com.carrental.entity.Billing
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Version select: select id from billing where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Insert (0): insert into billing (payment_date,payment_status,reservation_id,total_amount,transaction_id) values (?,?,?,?,?)
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Update (0): update billing set payment_date=?,payment_status=?,reservation_id=?,total_amount=?,transaction_id=? where id=?
2025-04-03 21:39:05 [PAYMENT] DEBUG -  Delete (0): delete from billing where id=?
2025-04-03 21:39:05 [PAYMENT] INFO  - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-03 21:39:05 [PAYMENT] DEBUG - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1ff81b0d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@72115c48]
2025-04-03 21:39:05 [PAYMENT] DEBUG - Checking 0 named HQL queries
2025-04-03 21:39:05 [PAYMENT] DEBUG - Checking 0 named SQL queries
2025-04-03 21:39:06 [PAYMENT] DEBUG - No alter strings for table : billing
2025-04-03 21:39:06 [PAYMENT] DEBUG - No alter strings for table : cars
2025-04-03 21:39:06 [PAYMENT] DEBUG - No alter strings for table : rentals
2025-04-03 21:39:06 [PAYMENT] DEBUG - No alter strings for table : reservations
2025-04-03 21:39:06 [PAYMENT] DEBUG - No alter strings for table : users
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:06 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:06 [PAYMENT] DEBUG - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e6f1f48
2025-04-03 21:39:06 [PAYMENT] DEBUG - Registering SessionFactory: 827c9c41-cc72-475f-ac7b-82d211fadf33 (<unnamed>)
2025-04-03 21:39:06 [PAYMENT] DEBUG - Not binding SessionFactory to JNDI, no JNDI name configured
2025-04-03 21:39:06 [PAYMENT] DEBUG - Instantiated SessionFactory
2025-04-03 21:39:06 [PAYMENT] INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 21:39:06 [PAYMENT] DEBUG - Statistics initialized [enabled=false]
2025-04-03 21:39:06 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:06 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:06 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:06 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:06 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:06 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:06 [PAYMENT] INFO  - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:06 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:06 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:06 [PAYMENT] DEBUG - HQL : SELECT new com.carrental.dto.CarReportDTO(c.id, c.make, c.model, c.year, c.available, c.rentalPrice) FROM Car c WHERE c.available = true
2025-04-03 21:39:06 [PAYMENT] DEBUG - Encountered use of reserved word as identifier : ,
2025-04-03 21:39:06 [PAYMENT] DEBUG - Encountered use of reserved word as identifier : ,
2025-04-03 21:39:07 [PAYMENT] DEBUG - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [dynamic-instantiation (class com.carrental.dto.CarReportDTO)]
              -> [arguments]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).id`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).make`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).model`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).year`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).available`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).rentalPrice`
                <- [argument (null)]
              <- [arguments]
            <- [dynamic-instantiation (class com.carrental.dto.CarReportDTO)]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.carrental.entity.Car(c)`
          <- [root] - `com.carrental.entity.Car(c)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.carrental.entity.Car(c).available`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-03 21:39:07 [PAYMENT] DEBUG - HQL : SELECT count(c) FROM Car c WHERE c.available = true
2025-04-03 21:39:07 [PAYMENT] DEBUG - Encountered use of reserved word as identifier : (
2025-04-03 21:39:07 [PAYMENT] DEBUG - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.carrental.entity.Car(c)`
          <- [root] - `com.carrental.entity.Car(c)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.carrental.entity.Car(c).available`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-03 21:39:07 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:07 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:07 [PAYMENT] DEBUG - HQL : SELECT new com.carrental.dto.CarReportDTO(c.id, c.make, c.model, c.year, c.available, c.rentalPrice) FROM Car c WHERE c.available = false
2025-04-03 21:39:07 [PAYMENT] DEBUG - Encountered use of reserved word as identifier : ,
2025-04-03 21:39:07 [PAYMENT] DEBUG - Encountered use of reserved word as identifier : ,
2025-04-03 21:39:07 [PAYMENT] DEBUG - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [dynamic-instantiation (class com.carrental.dto.CarReportDTO)]
              -> [arguments]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).id`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).make`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).model`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).year`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).available`
                <- [argument (null)]
                -> [argument (null)]
                    -> [basic-path] - `com.carrental.entity.Car(c).rentalPrice`
                <- [argument (null)]
              <- [arguments]
            <- [dynamic-instantiation (class com.carrental.dto.CarReportDTO)]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.carrental.entity.Car(c)`
          <- [root] - `com.carrental.entity.Car(c)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.carrental.entity.Car(c).available`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-03 21:39:07 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:140)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:184)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:07 [PAYMENT] DEBUG - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1141)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:1019)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:143)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy117.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:114)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.getCountQuery(JpaQueryLookupStrategy.java:208)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:175)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:256)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:116)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:104)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:92)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:92)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:431)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$4(RepositoryFactoryBeanSupport.java:350)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:356)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1859)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1609)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1667)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1555)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1381)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1218)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:347)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1155)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1121)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1056)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.carrental.CarRentalSystemApplication.main(CarRentalSystemApplication.java:10)
2025-04-03 21:39:07 [PAYMENT] DEBUG - HQL : SELECT count(c) FROM Car c WHERE c.available = false
2025-04-03 21:39:07 [PAYMENT] DEBUG - Encountered use of reserved word as identifier : (
2025-04-03 21:39:07 [PAYMENT] DEBUG - SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.carrental.entity.Car(c)`
          <- [root] - `com.carrental.entity.Car(c)`
        <- [from]
        -> [where]
          -> [EQUAL]
              -> [basic-path] - `com.carrental.entity.Car(c).available`
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

2025-04-03 21:39:07 [PAYMENT] WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-03 21:39:07 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:07 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:07 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:07 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:07 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: [127.0.0.1] exception: 
javax.management.InstanceNotFoundException: org.springframework.boot:type=Admin,name=SpringApplication
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1073)
	at java.management/com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:632)
	at java.management/com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:679)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1497)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1348)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1435)
	at java.management.rmi/javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:647)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:07 [PAYMENT] INFO  - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-04-03 21:39:07 [PAYMENT] DEBUG - Increased cache size by [521] for item [org.apache.catalina.webresources.CachedResource@8c6a7db] at [/index.html] making total cache size [1052]
2025-04-03 21:39:07 [PAYMENT] DEBUG - 
	c.c.c.AuthController:
	{POST [/api/auth/register]}: registerUser(User)
2025-04-03 21:39:07 [PAYMENT] DEBUG - 
	c.c.c.BillingController:
	{GET [/api/billing/{transactionId}]}: getBilling(String)
	{POST [/api/billing/pay/{reservationId}]}: makePayment(Long)
2025-04-03 21:39:07 [PAYMENT] DEBUG - 
	c.c.c.CarController:
	{DELETE [/api/cars/admin/delete/{id}]}: deleteCar(Long)
	{PUT [/api/cars/admin/update/{id}]}: updateCar(Long,Car)
	{POST [/api/cars/admin/add]}: addCar(Car)
	{GET [/api/cars/available]}: getAvailableCars()
2025-04-03 21:39:07 [PAYMENT] DEBUG - 
	c.c.c.RentalController:
	{POST [/api/rentals/return]}: returnCar(Long)
	{POST [/api/rentals/rent]}: rentCar(Long)
2025-04-03 21:39:07 [PAYMENT] DEBUG - 
	c.c.c.ReportController:
	{GET [/api/reports/rented-cars]}: getRentedCarsList()
	{GET [/api/reports/rented-cars/paged]}: getRentedCarsPaged(int,int)
	{GET [/api/reports/available-cars/pdf]}: exportAvailableCarsToPDF(int,int,HttpServletResponse)
	{GET [/api/reports/available-cars/excel]}: exportAvailableCarsToExcel(int,int,HttpServletResponse)
	{GET [/api/reports/available-cars]}: getAvailableCarsList()
	{GET [/api/reports/rented-cars/pdf]}: exportRentedCarsToPDF(int,int,HttpServletResponse)
	{GET [/api/reports/available-cars/paged]}: getAvailableCarsPaged(int,int)
2025-04-03 21:39:07 [PAYMENT] DEBUG - 
	c.c.c.ReservationController:
	{POST [/api/reservations/user/book]}: bookCar(ReservationDTO)
	{DELETE [/api/reservations/user/cancel/{reservationId}]}: cancelReservation(Long)
	{GET [/api/reservations/user/{userId}]}: getUserReservations(Long)
2025-04-03 21:39:07 [PAYMENT] DEBUG - 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2025-04-03 21:39:07 [PAYMENT] DEBUG - 'beanNameHandlerMapping' {}
2025-04-03 21:39:07 [PAYMENT] DEBUG - Increased cache size by [501] for item [org.apache.catalina.webresources.CachedResource@4aebd384] at [/] making total cache size [1553]
2025-04-03 21:39:07 [PAYMENT] DEBUG - 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2025-04-03 21:39:07 [PAYMENT] DEBUG - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, BasicAuthenticationFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-04-03 21:39:07 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:07 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:07 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:07 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:07 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STARTING_PREP]
2025-04-03 21:39:07 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STARTING]
2025-04-03 21:39:07 [PAYMENT] INFO  - Starting ProtocolHandler ["http-nio-8080"]
2025-04-03 21:39:07 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STARTED]
2025-04-03 21:39:07 [PAYMENT] INFO  - Tomcat started on port 8080 (http) with context path '/'
2025-04-03 21:39:07 [PAYMENT] INFO  - Started CarRentalSystemApplication in 5.343 seconds (process running for 5.998)
2025-04-03 21:39:08 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 82
2025-04-03 21:39:08 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:39:08 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:39:08 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1, name=org.springframework.boot:type=Admin,name=SpringApplication, attribute=Ready
2025-04-03 21:39:20 [PAYMENT] DEBUG - Error parsing HTTP request header
java.io.EOFException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.fillReadBuffer(NioEndpoint.java:1295)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(NioEndpoint.java:1183)
	at org.apache.coyote.http11.Http11InputBuffer.fill(Http11InputBuffer.java:795)
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:351)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:20 [PAYMENT] DEBUG - Error state [CLOSE_CONNECTION_NOW] reported while processing request
java.io.EOFException: null
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.fillReadBuffer(NioEndpoint.java:1295)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.read(NioEndpoint.java:1183)
	at org.apache.coyote.http11.Http11InputBuffer.fill(Http11InputBuffer.java:795)
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:351)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1575)
2025-04-03 21:39:20 [PAYMENT] DEBUG - Loading persistent provider registrations from [C:\Users\shrey\AppData\Local\Temp\tomcat.8080.10115356567983562947\conf\jaspic-providers.xml]
2025-04-03 21:39:20 [PAYMENT] INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-03 21:39:20 [PAYMENT] INFO  - Initializing Servlet 'dispatcherServlet'
2025-04-03 21:39:20 [PAYMENT] INFO  - Completed initialization in 1 ms
2025-04-03 21:39:20 [PAYMENT] DEBUG - Securing POST /api/auth/register
2025-04-03 21:39:20 [PAYMENT] DEBUG - Secured POST /api/auth/register
2025-04-03 21:39:21 [PAYMENT] DEBUG - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-04-03 21:39:21 [PAYMENT] DEBUG - begin
2025-04-03 21:39:21 [PAYMENT] DEBUG - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-04-03 21:39:21 [PAYMENT] DEBUG - Executing identity-insert immediately
2025-04-03 21:39:21 [PAYMENT] DEBUG - insert into users (password,role,username) values (?,?,?)
2025-04-03 21:39:21 [PAYMENT] DEBUG - Initializer list is empty
2025-04-03 21:39:21 [PAYMENT] DEBUG - Extracted generated values [com.carrental.entity.User]: [Ljava.lang.Object;@6fe6b1da
2025-04-03 21:39:21 [PAYMENT] DEBUG - committing
2025-04-03 21:39:21 [PAYMENT] DEBUG - Processing flush-time cascades
2025-04-03 21:39:21 [PAYMENT] DEBUG - Dirty checking collections
2025-04-03 21:39:21 [PAYMENT] DEBUG - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2025-04-03 21:39:21 [PAYMENT] DEBUG - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-04-03 21:39:21 [PAYMENT] DEBUG - Listing entities:
2025-04-03 21:39:21 [PAYMENT] DEBUG - com.carrental.entity.User{password=$2a$10$gCotGG/tc0XPw47bs.AnZeR6iD1FhLavMRevukE9FCReI0Y70y6iC, role=USER, id=22, username=Abhishek}
2025-04-03 21:39:21 [PAYMENT] DEBUG - Set SecurityContextHolder to anonymous SecurityContext
2025-04-03 21:39:32 [PAYMENT] DEBUG - RMI TCP Connection(1)-127.0.0.1: (port 53001) connection closed
2025-04-03 21:39:32 [PAYMENT] DEBUG - RMI TCP Connection(1)-127.0.0.1: close connection, socket: Socket[addr=/127.0.0.1,port=53005,localport=53001]
2025-04-03 21:39:32 [PAYMENT] DEBUG - RMI TCP Connection(1)-127.0.0.1: socket close: Socket[addr=/127.0.0.1,port=53005,localport=53001]
2025-04-03 21:39:32 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: (port 53003) connection closed
2025-04-03 21:39:32 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: close connection, socket: Socket[addr=/127.0.0.1,port=53006,localport=53003]
2025-04-03 21:39:32 [PAYMENT] DEBUG - RMI TCP Connection(2)-127.0.0.1: socket close: Socket[addr=/127.0.0.1,port=53006,localport=53003]
2025-04-03 21:39:35 [PAYMENT] DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-04-03 21:39:35 [PAYMENT] DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-03 21:40:02 [PAYMENT] DEBUG - RMI TCP Connection(3)-127.0.0.1: accepted socket from [127.0.0.1:53036]
2025-04-03 21:40:02 [PAYMENT] DEBUG - RMI TCP Connection(3)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:40:02 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  1
2025-04-03 21:40:05 [PAYMENT] DEBUG - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-04-03 21:40:05 [PAYMENT] DEBUG - HikariPool-1 - Fill pool skipped, pool has sufficient level or currently being filled.
2025-04-03 21:40:17 [PAYMENT] DEBUG - RMI TCP Connection(3)-127.0.0.1: (port 53003) connection closed
2025-04-03 21:40:17 [PAYMENT] DEBUG - RMI TCP Connection(3)-127.0.0.1: close connection, socket: Socket[addr=/127.0.0.1,port=53036,localport=53003]
2025-04-03 21:40:17 [PAYMENT] DEBUG - RMI TCP Connection(3)-127.0.0.1: socket close: Socket[addr=/127.0.0.1,port=53036,localport=53003]
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(4)-127.0.0.1: accepted socket from [127.0.0.1:53047]
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(4)-127.0.0.1: (port 53001) op = 80
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(4)-127.0.0.1: (port 53001) op = 84
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: accepted socket from [127.0.0.1:53048]
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "[Ljava.rmi.server.ObjID;", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@2ada9737
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.server.ObjID", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@2ada9737
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.server.UID", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@2ada9737
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.dgc.Lease", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@2ada9737
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.dgc.VMID", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@2ada9737
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "[B", codebase = "", defaultLoader = jdk.internal.loader.ClassLoaders$PlatformClassLoader@2ada9737
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 53003) op = 84
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: (port 53003) op = 80
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "javax.management.ObjectName", codebase = ""
2025-04-03 21:40:32 [PAYMENT] DEBUG - RMI TCP Connection(5)-127.0.0.1: name = "java.rmi.MarshalledObject", codebase = ""
2025-04-03 21:40:32 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  2 unwrapping params with MBean extended ClassLoader.
2025-04-03 21:40:32 [PAYMENT] DEBUG - connectionId=rmi://127.0.0.1  2, name=org.springframework.boot:type=Admin,name=SpringApplication, operationName=shutdown, signature=null
2025-04-03 21:40:32 [PAYMENT] INFO  - Application shutdown requested.
2025-04-03 21:40:32 [PAYMENT] INFO  - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-03 21:40:32 [PAYMENT] INFO  - Pausing ProtocolHandler ["http-nio-8080"]
2025-04-03 21:40:32 [PAYMENT] INFO  - Graceful shutdown complete
2025-04-03 21:40:32 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STOPPING_PREP]
2025-04-03 21:40:32 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STOPPING]
2025-04-03 21:40:32 [PAYMENT] INFO  - Stopping ProtocolHandler ["http-nio-8080"]
2025-04-03 21:40:32 [PAYMENT] DEBUG - Setting state for [Connector["http-nio-8080"]] to [STOPPED]
2025-04-03 21:40:32 [PAYMENT] INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-03 21:40:32 [PAYMENT] DEBUG - HHH000031: Closing
2025-04-03 21:40:32 [PAYMENT] DEBUG - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@307fedc6] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72115c48]
2025-04-03 21:40:32 [PAYMENT] DEBUG - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-04-03 21:40:32 [PAYMENT] DEBUG - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-04-03 21:40:32 [PAYMENT] INFO  - HikariPool-1 - Shutdown initiated...
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7f77e065: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@769893da: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@37a599e1: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6d86cda: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@578a66ae: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@53c4dd9d: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4e33403d: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@17cb6f65: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1db4acdc: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7b25c1: (connection evicted)
2025-04-03 21:40:32 [PAYMENT] DEBUG - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2025-04-03 21:40:32 [PAYMENT] INFO  - HikariPool-1 - Shutdown completed.
